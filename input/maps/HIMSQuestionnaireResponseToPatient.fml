map "http://openhie.org/fhir/sri-lanka/StructureMap/HIMSQuestionnaireResponseToPatient" = "HIMSQuestionnaireResponseToPatient"

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse" alias QResp as source
uses "http://openhie.org/fhir/sri-lanka/StructureDefinition/HIMSPatientRegistrationDataElements" alias IMMZC as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

imports "http://openhie.org/fhir/sri-lanka/StructureMap/HIMSPatientQuestionnaireResponseToLogicalModel"
imports "http://openhie.org/fhir/sri-lanka/StructureMap/HIMSLogicalModelToPatient"

name = "HIMS Questionnaire Response To Patient"
description = "Maps the Questionnaire Response to the HIMS Patient resource data elements."

group QRestToIMMZC (
  source qr : QResp,
  target bundle: Bundle
) {
  qr -> bundle.id = uuid() "ruleBundleId";
  qr -> bundle.type = 'collection' "ruleBundleType";
  qr -> bundle.entry as entry, entry.resource = create('Patient') as patient,
    create("http://openhie.org/fhir/sri-lanka/StructureDefinition/HIMSPatientRegistrationDataElements") as model
      then{
        qr -> model then QRespToIMMZC( qr, model) "QRtoLM";
        qr -> patient then DataDictToPatient( model, patient ) "LMtoPatient";
        qr -> patient.active = true "rulePatientActive";
      } "QRtoPatient";
} "processQRestToIMMZC";