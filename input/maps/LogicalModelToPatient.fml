map "http://openhie.org/fhir/sri-lanka/StructureMap/LogicalModelToPatient" = "LogicalModelToPatient"

uses "http://openhie.org/fhir/sri-lanka/StructureDefinition/RegisterPatientDataDictionary" alias IMMZC as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" alias Bundle as target
uses "http://hl7.org/fhir/StructureDefinition/Patient" alias Patient as target

group LogicalModelToPatient (
  source immzc : IMMZC,
  target patient: Patient
) {

  immzc.personalHealthNumber as id -> patient.identifier as identifier then {
    id -> identifier.value = id "SetPersonalHealthNumberValue";
  } "SetPHN";

   immzc.nationalIdentityCard as id -> patient.identifier as identifier then {
    id -> identifier.value = id "SetNationalIdentityCardNumberValue";
  } "SetNIC";

   immzc.pasport as id -> patient.identifier as identifier then {
    id -> identifier.value = id "SetPassportNumberValue";
  } "SetPassport";

   immzc.drivingLicense as id -> patient.identifier as identifier then {
    id -> identifier.value = id "SetDrivingLicenseNumberValue";
  } "SetDL";

   immzc.seniorCitizenNumber as id -> patient.identifier as identifier then {
    id -> identifier.value = id "SetSeniorCitizenNumberValue";
  } "SetSCN";
  
  //immzc -> patient.name as pname then NameToHumanName( immzc, pname ) "SetName";

  immzc.sex as sex -> patient.gender = sex "SetGender";

  immzc.birthDate as birthDate -> patient.birthDate = birthDate "SetBirthDate";

  immzc.patientName as patient -> patient.name as pName
    then NameToHumanName( patient, pName ) "SetPatientNames";

 immzc.patientName as patientName -> patient.name as hname 
    then NameToHumanName( patientName, hname ) "SetPatientNames";

 /* immzc.phone as phone -> patient.telecom as telecom then {
    phone as content -> telecom.value = content, telecom.system = 'phone' "SetPhoneValue";
  } "SetPhone";*/

  /*immzc.administrativeArea as area -> patient.address as address then {
    area.coding first as coding -> address then {
      coding.code as content -> address.text = content "SetAddressToCode";
      coding.display as content -> address.text = content "SetAddressToDisplay";
    } "SetAddressText";
  } "SetAdministrativeArea";*/


}

group NameToHumanName (
  source name,
  target hname
) {
  name.fullName as fullName -> hname.text = fullName "SetFullName";
  name.firstName as firstName -> hname.given = firstName "SetFirstName";
  name.surname as surname -> hname.family = surname "SetFamilyName";
}